syntax = "proto3";
import "google/protobuf/empty.proto";
import "service-mesh-performance/service/error.proto";
import "service-mesh-performance/service/health.proto";
import "service-mesh-performance/service/info.proto";
import "service-mesh-performance/protos/service_mesh.proto";

package smi_conformance;
option go_package = "conformance;conformance";

enum Capability {
    FULL = 0;
    HALF = 1;
    NONE = 2;
}

enum TestStatus {
    COMPLETED = 0;
    INPROGRESS = 1;
    CRASHED = 2;
}

enum ResultStatus {
    PASSED = 0;
    FAILED = 1;
}

message Request {
    smp.ServiceMesh mesh = 1;
}

message Result {
  oneof result {
    string message = 1;
    service.CommonError error = 2;
  }
}

message Detail {
    string smispec = 1;
    string specversion = 2;
    string assertion = 3;
    string duration = 4;
    Result result = 5;
    Capability capability = 6;
    ResultStatus status = 7;
}

message Response {
    string passpercent = 1;
    string casespassed = 2;
    smp.ServiceMesh mesh = 3;
    repeated Detail details = 5;
}

service conformanceTesting{
    rpc Info (google.protobuf.Empty) returns (service.ServiceInfo);
    rpc Health (google.protobuf.Empty) returns (service.ServiceHealth);
    rpc RunTest (Request) returns (Response);
}